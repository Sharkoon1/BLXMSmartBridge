class AdjustmentValueService_js <<module>> << (M,orchid) >> #DarkSeaGreen {
    
    getAdjustmentValue()
}
class ArbitrageService {
    _bridgeService
    _bscContracts
    _databaseService
    _ethContracts
    _swapTransferFunctionName
    _bridgeAndSwapBSC()
    _bridgeAndSwapETH()
    _calculateAbitrageProfit()
    _startArbitrageCycle()
    constructor()
    startArbitrage()
    startArbitrageTransferFromBSCToETH()
    startArbitrageTransferFromETHToBSC()
}

ArbitrageService *--> DataBaseService : _databaseService
ArbitrageService *--> Contracts : _ethContracts
ArbitrageService *--> Contracts : _bscContracts
ArbitrageService ..> poolPriceEth : usdcAmount
ArbitrageService ..> poolPriceBsc : usdcAmount
ArbitrageService ..> Utility : swapAmount
class ArbitrageService_js <<module>> << (M,orchid) >> #DarkSeaGreen {
    AdjustmentValueService
    Contracts
    DataBaseService
    Utility
    constants
}

class BridgeService {
    _bridgeBscContracts
    _bridgeEthContracts
    _bscContracts
    _ethContracts
    _walletContainer
    bridgeBLXMTokenBscToEth()
    bridgeBLXMTokenEthToBsc()
    bridgeUSDTokenBscToEth()
    bridgeUSDTokenEthToBsc()
    constructor()
    ArbitrageServiceInstance
    BridgeServiceInstance
    getExpensiveNetwork()
    swap()
    swapViaBridge()
}

BridgeService *--> Contracts : _ethContracts
BridgeService *--> Contracts : _bscContracts
BridgeService *--> Contracts : _bridgeEthContracts
BridgeService *--> Contracts : _bridgeBscContracts
class BridgeService_js <<module>> << (M,orchid) >> #DarkSeaGreen {
    Contracts
    constants
}

BridgeService_js .. BridgeService : contains >
class DataBaseService {
    db
    AddData()
    QueryById()
    QueryData()
    UpdateById()
    constructor()
}

SwapService *--> BridgeService : BridgeServiceInstance
SwapService *--> ArbitrageService : ArbitrageServiceInstance
class SwapService_js <<module>> << (M,orchid) >> #DarkSeaGreen {
    ArbitrageService
    BridgeService
    constants
    utility
    getExpensiveNetwork()
    swapViaBridge()
    swap()

}

ArbitrageService_js .. ArbitrageService : contains >
class SwapService {
    ArbitrageServiceInstance
    BridgeServiceInstance
    constructor()
    getExpensiveNetwork()
    swap()
    swapViaBridge()
}

SwapService_js .. SwapService : contains >
center footer Generated by GitUml www.gituml.com
hide empty members

DataBaseService_js .. DataBaseService : contains >

class DataBaseService_js <<module>> << (M,orchid) >> #DarkSeaGreen {
    Profit
    mongoose
}